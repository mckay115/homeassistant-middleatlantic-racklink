name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
        home-assistant-version: ["2023.1.0", "2024.1.0"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-test.txt
          pip install homeassistant==${{ matrix.home-assistant-version }}

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 custom_components/middle_atlantic_racklink --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 custom_components/middle_atlantic_racklink --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

      - name: Format check with black
        run: |
          black --check custom_components/middle_atlantic_racklink tests

      - name: Import order check with isort
        run: |
          isort --check-only custom_components/middle_atlantic_racklink tests

      - name: Type check with mypy
        run: |
          mypy custom_components/middle_atlantic_racklink

      - name: Test with pytest
        run: |
          pytest tests/ --cov=custom_components/middle_atlantic_racklink --cov-report=xml --cov-report=term-missing

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  validate:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: HACS validation
        uses: hacs/action@main
        with:
          category: integration

      - name: Hassfest validation
        uses: home-assistant/actions/hassfest@master

  security:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Run Bandit Security Linter
        uses: securecodewarrior/github-action-bandit@v1.0.1
        with:
          directory: custom_components/middle_atlantic_racklink

      - name: Safety check
        run: |
          pip install safety
          safety check --json || echo "Safety check completed"

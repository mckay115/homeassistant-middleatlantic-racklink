[tool.isort]
profile = "black"
line_length = 88
known_first_party = ["custom_components"]
known_third_party = ["homeassistant"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
default_section = "THIRDPARTY"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
force_alphabetical_sort = true

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=custom_components/middle_atlantic_racklink --cov-report=term-missing"

[tool.coverage.run]
source = ["custom_components/middle_atlantic_racklink"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[tool.pylint.MASTER]
ignore = [
    "CVS",
    ".git",
    ".hg",
    ".tox",
    ".eggs",
    "*.egg",
    "__pycache__",
    ".venv",
]
jobs = 0
persistent = "yes"
suggestion-mode = "yes"
unsafe-load-any-extension = "no"

[tool.pylint."MESSAGES CONTROL"]
disable = [
    "raw-checker-failed",
    "bad-inline-option",
    "locally-disabled",
    "file-ignored",
    "suppressed-message",
    "useless-suppression",
    "deprecated-pragma",
    "use-symbolic-message-instead",
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = "homeassistant.*"
ignore_missing_imports = true

[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["custom_components.middle_atlantic_racklink"]
